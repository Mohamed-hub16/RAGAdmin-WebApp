{"ast":null,"code":"import React,{useState,useEffect}from\"react\";// @ts-ignore\nimport\"../../../css/main-interface/historical.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function Historical(_ref){let{userId,onChatSelected}=_ref;const[chats,setChats]=useState([]);const[activeChatId,setActiveChatId]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchChats=async()=>{setIsLoading(true);setError(null);try{const response=await fetch(\"http://localhost:5000/api/historicals/\".concat(userId));const data=await response.json();if(data.message&&data.message===\"Aucun historique trouvÃ©.\"){setChats([]);setError(null);}else if(Array.isArray(data)&&data.length>0){const formattedChats=data.map(chat=>({id:chat.id,label:\"Chat #\".concat(chat.id,\" - Cr\\xE9\\xE9 le \").concat(new Date(chat.created_at).toLocaleString())}));setChats(formattedChats);}else{setError(\"Aucun historique trouvÃ©.\");}}catch(error){setError(error.message);}finally{setIsLoading(false);}};fetchChats();},[userId]);const handleChatClick=async chatId=>{setActiveChatId(chatId);const response=await fetch(\"http://localhost:5000/api/chats/\".concat(chatId,\"/messages\"));if(!response.ok){console.error(\"Erreur lors de la rÃ©cupÃ©ration des messages\");return;}const messages=await response.json();onChatSelected(chatId,messages);};const handleNewChat=async()=>{setError(null);try{const response=await fetch(\"http://localhost:5000/api/chats\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({userId})});if(!response.ok){throw new Error(\"Erreur lors de la crÃ©ation dâ€™un nouveau chat\");}const data=await response.json();const newChat={id:data.chat.id,label:\"Chat #\".concat(data.chat.id,\" - Cr\\xE9\\xE9 maintenant\")};setChats(prevChats=>[...prevChats,newChat]);setActiveChatId(newChat.id);const messagesResponse=await fetch(\"http://localhost:5000/api/chats/\".concat(newChat.id,\"/messages\"));if(!messagesResponse.ok){console.error(\"Erreur lors de la rÃ©cupÃ©ration des messages\");return;}const messages=await messagesResponse.json();onChatSelected(newChat.id,messages);}catch(error){console.error(error.message);setError(error.message);}};const handleDeleteChat=async chatId=>{setError(null);try{const response=await fetch(\"http://localhost:5000/api/historicals/\".concat(chatId),{method:\"DELETE\"});if(!response.ok){throw new Error(\"Erreur lors de la suppression du chat\");}setChats(prevChats=>prevChats.filter(chat=>chat.id!==chatId));window.location.reload();}catch(error){setError(error.message);console.error(\"Erreur lors de la suppression du chat:\",error.message);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"historical-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"historical-header\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"historical-h4\",children:\"Historique des demandes\"}),/*#__PURE__*/_jsx(\"button\",{className:\"new-chat-button\",onClick:handleNewChat,children:\"Nouveau chat\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),chats.length===0&&!isLoading&&!error?/*#__PURE__*/_jsxs(\"div\",{className:\"no-chats-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Oups ! \\uD83D\\uDE2D\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Vous n'avez pas de chat, cr\\xE9ez-en un.\"})]}):isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:\"Chargement...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"historical-chats\",children:chats.map(chat=>/*#__PURE__*/_jsxs(\"div\",{className:\"chat-item \".concat(activeChatId===chat.id?\"selected\":\"\"),onClick:()=>handleChatClick(chat.id),children:[chat.label,/*#__PURE__*/_jsx(\"button\",{className:\"delete-chat-button\",onClick:e=>{e.stopPropagation();handleDeleteChat(chat.id);},children:\"Supprimer\"})]},chat.id))})]});}","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Historical","_ref","userId","onChatSelected","chats","setChats","activeChatId","setActiveChatId","isLoading","setIsLoading","error","setError","fetchChats","response","fetch","concat","data","json","message","Array","isArray","length","formattedChats","map","chat","id","label","Date","created_at","toLocaleString","handleChatClick","chatId","ok","console","messages","handleNewChat","method","headers","body","JSON","stringify","Error","newChat","prevChats","messagesResponse","handleDeleteChat","filter","window","location","reload","className","children","onClick","e","stopPropagation"],"sources":["C:/Users/matia/Documents/rag/RAGAdmin-WebApp/rag-webapp/src/components/main-interface/historical/Historical.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// @ts-ignore\r\nimport \"../../../css/main-interface/historical.css\";\r\n\r\nexport function Historical({\r\n                               userId,\r\n                               onChatSelected,\r\n                           }: {\r\n    userId: number;\r\n    onChatSelected: (historicalId: number, messages: { sender: \"user\" | \"bot\"; text: string }[]) => void;\r\n}) {\r\n    const [chats, setChats] = useState<{ id: number; label: string }[]>([]);\r\n    const [activeChatId, setActiveChatId] = useState<number | null>(null);\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchChats = async () => {\r\n            setIsLoading(true);\r\n            setError(null);\r\n\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/historicals/${userId}`);\r\n\r\n                const data = await response.json();\r\n\r\n                if (data.message && data.message === \"Aucun historique trouvÃ©.\") {\r\n                    setChats([]);\r\n                    setError(null);\r\n                } else if (Array.isArray(data) && data.length > 0) {\r\n                    const formattedChats = data.map((chat: { id: number; created_at: string }) => ({\r\n                        id: chat.id,\r\n                        label: `Chat #${chat.id} - CrÃ©Ã© le ${new Date(chat.created_at).toLocaleString()}`,\r\n                    }));\r\n                    setChats(formattedChats);\r\n                } else {\r\n                    setError(\"Aucun historique trouvÃ©.\");\r\n                }\r\n            } catch (error: any) {\r\n                setError(error.message);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchChats();\r\n    }, [userId]);\r\n\r\n\r\n    const handleChatClick = async (chatId: number) => {\r\n        setActiveChatId(chatId);\r\n\r\n        const response = await fetch(`http://localhost:5000/api/chats/${chatId}/messages`);\r\n        if (!response.ok) {\r\n            console.error(\"Erreur lors de la rÃ©cupÃ©ration des messages\");\r\n            return;\r\n        }\r\n        const messages = await response.json();\r\n        onChatSelected(chatId, messages);\r\n    };\r\n\r\n    const handleNewChat = async () => {\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/chats\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ userId }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Erreur lors de la crÃ©ation dâ€™un nouveau chat\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            const newChat = {\r\n                id: data.chat.id,\r\n                label: `Chat #${data.chat.id} - CrÃ©Ã© maintenant`,\r\n            };\r\n\r\n            setChats((prevChats) => [...prevChats, newChat]);\r\n            setActiveChatId(newChat.id);\r\n\r\n            const messagesResponse = await fetch(`http://localhost:5000/api/chats/${newChat.id}/messages`);\r\n            if (!messagesResponse.ok) {\r\n                console.error(\"Erreur lors de la rÃ©cupÃ©ration des messages\");\r\n                return;\r\n            }\r\n\r\n            const messages = await messagesResponse.json();\r\n            onChatSelected(newChat.id, messages);\r\n        } catch (error: any) {\r\n            console.error(error.message);\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const handleDeleteChat = async (chatId: number) => {\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/historicals/${chatId}`, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Erreur lors de la suppression du chat\");\r\n            }\r\n\r\n            setChats((prevChats) => prevChats.filter((chat) => chat.id !== chatId));\r\n\r\n            window.location.reload();\r\n        } catch (error: any) {\r\n            setError(error.message);\r\n            console.error(\"Erreur lors de la suppression du chat:\", error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"historical-container\">\r\n            <div className=\"historical-header\">\r\n                <h4 className=\"historical-h4\">Historique des demandes</h4>\r\n                <button className=\"new-chat-button\" onClick={handleNewChat}>\r\n                    Nouveau chat\r\n                </button>\r\n            </div>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            {chats.length === 0 && !isLoading && !error ? (\r\n                <div className=\"no-chats-message\">\r\n                    <h2>Oups ! ðŸ˜­</h2>\r\n                    <p>Vous n'avez pas de chat, crÃ©ez-en un.</p>\r\n                </div>\r\n            ) : isLoading ? (\r\n                <div className=\"loading-message\">Chargement...</div>\r\n            ) : (\r\n                <div className=\"historical-chats\">\r\n                    {chats.map((chat) => (\r\n                        <div\r\n                            key={chat.id}\r\n                            className={`chat-item ${activeChatId === chat.id ? \"selected\" : \"\"}`}\r\n                            onClick={() => handleChatClick(chat.id)}\r\n                        >\r\n                            {chat.label}\r\n                            <button\r\n                                className=\"delete-chat-button\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    handleDeleteChat(chat.id);\r\n                                }}\r\n                            >\r\n                                Supprimer\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}