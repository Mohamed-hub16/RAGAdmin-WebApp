{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Header from\"./header/Header\";import{Prompt}from\"./prompt/prompt\";import\"../../css/main-interface/main.css\";import{Historical}from\"./historical/Historical\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function Main(){const userId=Number(localStorage.getItem(\"userId\"));const[selectedChatMessages,setSelectedChatMessages]=useState([]);const[selectedHistoricalId,setSelectedHistoricalId]=useState(null);useEffect(()=>{if(selectedHistoricalId!==null){const fetchMessages=async()=>{try{const response=await fetch(\"http://localhost:5000/api/chats/\".concat(selectedHistoricalId,\"/messages\"));if(!response.ok){throw new Error(\"Erreur lors de la récupération des messages\");}const messages=await response.json();setSelectedChatMessages(messages);}catch(error){console.error(\"Erreur:\",error);}};fetchMessages();}},[selectedHistoricalId]);const handleChatSelected=(historicalId,messages)=>{setSelectedHistoricalId(historicalId);setSelectedChatMessages(messages);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-side\",children:/*#__PURE__*/_jsx(Historical,{userId:userId!==null&&userId!==void 0?userId:0,onChatSelected:handleChatSelected})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-side\",children:/*#__PURE__*/_jsx(Prompt,{initialMessages:selectedChatMessages,historicalId:selectedHistoricalId})})]})]});}","map":{"version":3,"names":["React","useEffect","useState","Header","Prompt","Historical","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Main","userId","Number","localStorage","getItem","selectedChatMessages","setSelectedChatMessages","selectedHistoricalId","setSelectedHistoricalId","fetchMessages","response","fetch","concat","ok","Error","messages","json","error","console","handleChatSelected","historicalId","children","className","onChatSelected","initialMessages"],"sources":["C:/Users/matia/Documents/rag/RAGAdmin-WebApp/rag-webapp/src/components/main-interface/Main.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./header/Header\";\r\nimport { Prompt } from \"./prompt/prompt\";\r\nimport \"../../css/main-interface/main.css\";\r\nimport { Historical } from \"./historical/Historical\";\r\n\r\nexport function Main() {\r\n    const userId = Number(localStorage.getItem(\"userId\"));\r\n    const [selectedChatMessages, setSelectedChatMessages] = useState<\r\n        { sender: \"user\" | \"bot\"; text: string }[]\r\n    >([]);\r\n    const [selectedHistoricalId, setSelectedHistoricalId] = useState<number | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (selectedHistoricalId !== null) {\r\n            const fetchMessages = async () => {\r\n                try {\r\n                    const response = await fetch(\r\n                        `http://localhost:5000/api/chats/${selectedHistoricalId}/messages`\r\n                    );\r\n                    if (!response.ok) {\r\n                        throw new Error(\"Erreur lors de la récupération des messages\");\r\n                    }\r\n                    const messages = await response.json();\r\n                    setSelectedChatMessages(messages);\r\n                } catch (error) {\r\n                    console.error(\"Erreur:\", error);\r\n                }\r\n            };\r\n\r\n            fetchMessages();\r\n        }\r\n    }, [selectedHistoricalId]);\r\n\r\n    const handleChatSelected = (\r\n        historicalId: number,\r\n        messages: { sender: \"user\" | \"bot\"; text: string }[]\r\n    ) => {\r\n        setSelectedHistoricalId(historicalId);\r\n        setSelectedChatMessages(messages);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"main-container\">\r\n                <div className=\"left-side\">\r\n                    <Historical\r\n                        userId={userId ?? 0}\r\n                        onChatSelected={handleChatSelected}\r\n                    />\r\n                </div>\r\n                <div className=\"right-side\">\r\n                    <Prompt\r\n                        initialMessages={selectedChatMessages}\r\n                        historicalId={selectedHistoricalId}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CACpC,OAASC,MAAM,KAAQ,iBAAiB,CACxC,MAAO,mCAAmC,CAC1C,OAASC,UAAU,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAErD,MAAO,SAAS,CAAAC,IAAIA,CAAA,CAAG,CACnB,KAAM,CAAAC,MAAM,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CACrD,KAAM,CAACC,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGhB,QAAQ,CAE9D,EAAE,CAAC,CACL,KAAM,CAACiB,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGlB,QAAQ,CAAgB,IAAI,CAAC,CAErFD,SAAS,CAAC,IAAM,CACZ,GAAIkB,oBAAoB,GAAK,IAAI,CAAE,CAC/B,KAAM,CAAAE,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,oCAAAC,MAAA,CACWL,oBAAoB,aAC3D,CAAC,CACD,GAAI,CAACG,QAAQ,CAACG,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAClE,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CACtCV,uBAAuB,CAACS,QAAQ,CAAC,CACrC,CAAE,MAAOE,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,SAAS,CAAEA,KAAK,CAAC,CACnC,CACJ,CAAC,CAEDR,aAAa,CAAC,CAAC,CACnB,CACJ,CAAC,CAAE,CAACF,oBAAoB,CAAC,CAAC,CAE1B,KAAM,CAAAY,kBAAkB,CAAGA,CACvBC,YAAoB,CACpBL,QAAoD,GACnD,CACDP,uBAAuB,CAACY,YAAY,CAAC,CACrCd,uBAAuB,CAACS,QAAQ,CAAC,CACrC,CAAC,CAED,mBACIlB,KAAA,CAAAE,SAAA,EAAAsB,QAAA,eACI1B,IAAA,CAACJ,MAAM,GAAE,CAAC,cACVM,KAAA,QAAKyB,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC3B1B,IAAA,QAAK2B,SAAS,CAAC,WAAW,CAAAD,QAAA,cACtB1B,IAAA,CAACF,UAAU,EACPQ,MAAM,CAAEA,MAAM,SAANA,MAAM,UAANA,MAAM,CAAI,CAAE,CACpBsB,cAAc,CAAEJ,kBAAmB,CACtC,CAAC,CACD,CAAC,cACNxB,IAAA,QAAK2B,SAAS,CAAC,YAAY,CAAAD,QAAA,cACvB1B,IAAA,CAACH,MAAM,EACHgC,eAAe,CAAEnB,oBAAqB,CACtCe,YAAY,CAAEb,oBAAqB,CACtC,CAAC,CACD,CAAC,EACL,CAAC,EACR,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}