{"ast":null,"code":"import _objectSpread from\"C:/Users/matia/Documents/rag/RAGAdmin-WebApp/rag-webapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/matia/Documents/rag/RAGAdmin-WebApp/rag-webapp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"node\",\"inline\",\"className\",\"children\"];import React,{useState,useRef,useEffect}from\"react\";import ReactMarkdown from'react-markdown';import Envoyer from\"../../../res/envoyer.png\";import\"../../../css/main-interface/prompt.css\";import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';// @ts-ignore\nimport{vscDarkPlus}from\"react-syntax-highlighter/dist/esm/styles/prism\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function Prompt(_ref){let{initialMessages,historicalId}=_ref;const[messages,setMessages]=useState([]);const[userInput,setUserInput]=useState(\"\");const[isBotTyping,setIsBotTyping]=useState(false);const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{if(historicalId){setMessages(initialMessages||[]);}else{setMessages([]);// Réinitialise les messages quand aucun chat n'est ouvert\n}},[initialMessages,historicalId]);useEffect(()=>{scrollToBottom();},[messages]);const saveMessageToDatabase=async(sender,text)=>{if(!historicalId)return;try{const response=await fetch(\"http://localhost:5000/api/chats/messages\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({historicalId,sender,content:text})});if(!response.ok){throw new Error(\"Erreur lors de l'enregistrement du message.\");}}catch(error){console.error(error);}};const handleSendMessage=async()=>{if(!userInput.trim()||isBotTyping||!historicalId)return;const userMessage={sender:\"user\",text:userInput};// @ts-ignore\nsetMessages(prevMessages=>[...prevMessages,userMessage]);await saveMessageToDatabase(\"user\",userInput);setUserInput(\"\");setIsBotTyping(true);setTimeout(async()=>{const botResponse=userInput;setMessages(prevMessages=>[...prevMessages,{sender:\"bot\",text:botResponse}]);await saveMessageToDatabase(\"bot\",botResponse);setIsBotTyping(false);},2000);};const handleKeyPress=e=>{if(e.key===\"Enter\"&&!isBotTyping){handleSendMessage();}};return/*#__PURE__*/_jsx(\"div\",{className:\"chat-container\",children:!historicalId?/*#__PURE__*/_jsxs(\"div\",{className:\"no-chat-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Aucun chat d'ouvert !\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Ouvrez un nouveau chat ou cr\\xE9ez en-un. \"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender===\"user\"?\"user-message\":\"bot-message\"),children:message.sender===\"bot\"?/*#__PURE__*/_jsx(ReactMarkdown,{components:{code(_ref2){let{node,inline,className,children}=_ref2,props=_objectWithoutProperties(_ref2,_excluded);const match=/language-(\\w+)/.exec(className||\"\");return!inline&&match?/*#__PURE__*/_jsx(SyntaxHighlighter,_objectSpread(_objectSpread({style:vscDarkPlus,language:match[1],PreTag:\"div\"},props),{},{children:String(children).replace(/\\n$/,\"\")})):/*#__PURE__*/_jsx(\"code\",_objectSpread(_objectSpread({className:className},props),{},{children:children}));}},children:message.text}):/*#__PURE__*/_jsx(\"span\",{children:message.text})},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userInput,onChange:e=>setUserInput(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Entrez votre texte ici...\",className:\"input-field\",disabled:!historicalId}),/*#__PURE__*/_jsx(\"button\",{className:\"send-button\",onClick:handleSendMessage,disabled:isBotTyping||!historicalId,children:/*#__PURE__*/_jsx(\"img\",{className:\"img-send\",src:Envoyer,alt:\"Envoyer\"})})]})]})});}","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactMarkdown","Envoyer","Prism","SyntaxHighlighter","vscDarkPlus","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Prompt","_ref","initialMessages","historicalId","messages","setMessages","userInput","setUserInput","isBotTyping","setIsBotTyping","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","saveMessageToDatabase","sender","text","response","fetch","method","headers","body","JSON","stringify","content","ok","Error","error","console","handleSendMessage","trim","userMessage","prevMessages","setTimeout","botResponse","handleKeyPress","e","key","className","children","map","message","index","concat","components","code","_ref2","node","inline","props","_objectWithoutProperties","_excluded","match","exec","_objectSpread","style","language","PreTag","String","replace","ref","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","src","alt"],"sources":["C:/Users/matia/Documents/rag/RAGAdmin-WebApp/rag-webapp/src/components/main-interface/prompt/prompt.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ReactMarkdown from 'react-markdown';\r\nimport Envoyer from \"../../../res/envoyer.png\";\r\nimport \"../../../css/main-interface/prompt.css\";\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\n// @ts-ignore\r\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\ninterface Message {\r\n    sender: \"user\" | \"bot\";\r\n    text: string;\r\n}\r\n\r\n\r\nexport function Prompt({\r\n                           initialMessages,\r\n                           historicalId,\r\n                       }: {\r\n    initialMessages: Message[];\r\n    historicalId: number | null;\r\n}) {\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [userInput, setUserInput] = useState<string>(\"\");\r\n    const [isBotTyping, setIsBotTyping] = useState<boolean>(false);\r\n    const messagesEndRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (historicalId) {\r\n            setMessages(initialMessages || []);\r\n        } else {\r\n            setMessages([]); // Réinitialise les messages quand aucun chat n'est ouvert\r\n        }\r\n    }, [initialMessages, historicalId]);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const saveMessageToDatabase = async (sender: \"user\" | \"bot\", text: string) => {\r\n        if (!historicalId) return;\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/chats/messages\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    historicalId,\r\n                    sender,\r\n                    content: text,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Erreur lors de l'enregistrement du message.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!userInput.trim() || isBotTyping || !historicalId) return;\r\n\r\n        const userMessage = { sender: \"user\", text: userInput };\r\n        // @ts-ignore\r\n        setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n        await saveMessageToDatabase(\"user\", userInput);\r\n\r\n        setUserInput(\"\");\r\n        setIsBotTyping(true);\r\n\r\n        setTimeout(async () => {\r\n            const botResponse = userInput;\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                { sender: \"bot\", text: botResponse },\r\n            ]);\r\n            await saveMessageToDatabase(\"bot\", botResponse);\r\n            setIsBotTyping(false);\r\n        }, 2000);\r\n    };\r\n\r\n    const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\" && !isBotTyping) {\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            {!historicalId ? (\r\n                <div className=\"no-chat-message\">\r\n                    <h2>Aucun chat d'ouvert !</h2>\r\n                    <span>Ouvrez un nouveau chat ou créez en-un. </span>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"chat-messages\">\r\n                        {messages.map((message, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`message ${\r\n                                    message.sender === \"user\" ? \"user-message\" : \"bot-message\"\r\n                                }`}\r\n                            >\r\n                                {message.sender === \"bot\" ? (\r\n                                    <ReactMarkdown\r\n                                        components={{\r\n                                            code({ node, inline, className, children, ...props }: any) {\r\n                                                const match = /language-(\\w+)/.exec(className || \"\");\r\n                                                return !inline && match ? (\r\n                                                    <SyntaxHighlighter\r\n                                                        style={vscDarkPlus}\r\n                                                        language={match[1]}\r\n                                                        PreTag=\"div\"\r\n                                                        {...props}\r\n                                                    >\r\n                                                        {String(children).replace(/\\n$/, \"\")}\r\n                                                    </SyntaxHighlighter>\r\n                                                ) : (\r\n                                                    <code className={className} {...props}>\r\n                                                        {children}\r\n                                                    </code>\r\n                                                );\r\n                                            }\r\n                                            ,\r\n                                        }}\r\n                                    >\r\n                                        {message.text}\r\n                                    </ReactMarkdown>\r\n                                ) : (\r\n                                    <span>{message.text}</span>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                        <div ref={messagesEndRef} />\r\n                    </div>\r\n                    <div className=\"chat-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={userInput}\r\n                            onChange={(e) => setUserInput(e.target.value)}\r\n                            onKeyPress={handleKeyPress}\r\n                            placeholder=\"Entrez votre texte ici...\"\r\n                            className=\"input-field\"\r\n                            disabled={!historicalId}\r\n                        />\r\n                        <button\r\n                            className=\"send-button\"\r\n                            onClick={handleSendMessage}\r\n                            disabled={isBotTyping || !historicalId}\r\n                        >\r\n                            <img className=\"img-send\" src={Envoyer} alt=\"Envoyer\" />\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}